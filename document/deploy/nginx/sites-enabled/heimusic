server {
  listen 80;
  server_name oss.example.com;
  ignore_invalid_headers off;
  client_max_body_size 0;
  proxy_buffering off;

#  listen 443 ssl;
#  ssl_certificate /etc/nginx/cert/oss.example.com/cert.crt;
#  ssl_certificate_key /etc/nginx/cert/oss.example.com/cert.key;

  location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;

    proxy_connect_timeout 300;
    # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    chunked_transfer_encoding off;

    proxy_pass http://127.0.0.1:9000; # If you are using docker-compose this would be the hostname i.e. minio
    # Health Check endpoint might go here. See https://www.nginx.com/resources/wiki/modules/healthcheck/
    # /minio/health/live;
  }

}

map $http_upgrade $connection_upgrade {
  default     keep-alive;
  'websocket' upgrade;
}

server {
  listen 80;
  server_name oss-console.example.com;

  location / {
    proxy_pass http://127.0.0.1:9090/;
    proxy_set_header X-Real-IP $remote_addr;
    keepalive_timeout 5;
    client_max_body_size 0;
    #client_body_buffer_size 16M;
    proxy_set_header Upgrade    $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $http_host;
  }
}

server {
  listen 80;
  server_name music.example.com;
  client_max_body_size 0;
  proxy_buffering off;

  location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;

    proxy_connect_timeout 300;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    chunked_transfer_encoding off;
    proxy_pass http://127.0.0.1:9001/;
  }
}